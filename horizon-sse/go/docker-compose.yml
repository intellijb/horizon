
services:
  deep-server:
    build:
      context: .
      target: deep-server
    container_name: horizon-deep-server
    ports:
      - "10081:10081"
    environment:
      - PORT=10081
    networks:
      - horizon-network
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:10081/health"]
      interval: 5s
      timeout: 3s
      retries: 5
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 512M

  proxy-server:
    build:
      context: .
      target: proxy-server
    container_name: horizon-proxy-server
    ports:
      - "10080:10080"
    environment:
      - PORT=10080
      - DEEP_SERVER=http://deep-server:10081
    depends_on:
      deep-server:
        condition: service_healthy
    networks:
      - horizon-network
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:10080/health"]
      interval: 5s
      timeout: 3s
      retries: 5
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 512M

  loadtest:
    build:
      context: .
      target: loadtest
    container_name: horizon-loadtest
    environment:
      - URL=http://proxy-server:10080
      - CLIENTS=1000
      - RAMPUP=15s
    depends_on:
      proxy-server:
        condition: service_healthy
    networks:
      - horizon-network
    profiles:
      - test
    command: ["-url", "http://proxy-server:10080", "-clients", "1000", "-rampup", "15s"]

  prometheus:
    image: prom/prometheus:latest
    container_name: horizon-prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    ports:
      - "10090:9090"
    networks:
      - horizon-network
    profiles:
      - monitoring
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'

  grafana:
    image: grafana/grafana:latest
    container_name: horizon-grafana
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana-dashboard.json:/var/lib/grafana/dashboards/dashboard.json
    ports:
      - "10030:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    networks:
      - horizon-network
    profiles:
      - monitoring
    depends_on:
      - prometheus

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: horizon-cadvisor
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    ports:
      - "10082:8080"
    networks:
      - horizon-network
    profiles:
      - monitoring
    privileged: true

networks:
  horizon-network:
    driver: bridge

volumes:
  prometheus_data:
  grafana_data: